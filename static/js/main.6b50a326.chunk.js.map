{"version":3,"sources":["components/NavigationMenu.js","pages/HomePage.js","pages/AboutPage.js","pages/RecipesPage.js","pages/DashboardPage.js","App.js","serviceWorker.js","index.js"],"names":["ListItemLink","props","icon","primary","to","renderLink","React","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","useStyles2","makeStyles","theme","formControl","margin","spacing","whiteTranslateIcon","style","color","LanguageSelector","classes","useState","age","setAge","FormControl","className","Select","id","IconComponent","value","onChange","event","target","console","log","onSelectLanguage","fontSize","MenuItem","useStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","grow","title","sectionDesktop","breakpoints","up","PersistentDrawerLeft","useTheme","open","setOpen","darkMode","setDarkMode","CssBaseline","AppBar","position","clsx","opacity","backgroundBlendMode","backdropFilter","boxShadow","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","Drawer","anchor","paper","direction","Divider","List","text","link","iconFunc","map","obj","idx","key","AboutPage","App","state","lang","bind","e","this","setState","process","initialEntries","initialIndex","exact","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6b50a326.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Brightness6Icon from '@material-ui/icons/Brightness6';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport TranslateIcon from '@material-ui/icons/Translate';\r\nimport HomeIcon from '@material-ui/icons/Home'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n/*\r\n  Navigation Menu holds\r\n    - navbar (for settings)\r\n    - div to move all content down (so not obscurbed by navbar)\r\n    - sidebar for route navigation\r\n*/\r\n\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\n// Cannot add styling directly onto TranslateIcon in IconComponent which requires string input\r\nconst whiteTranslateIcon = () => { return (<TranslateIcon style={{color:\"inherit\"}} />) }\r\n\r\nfunction LanguageSelector(props) {\r\n  const classes = useStyles2();\r\n  const [age, setAge] = React.useState('en');\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n    console.log(event.target.value)\r\n    props.onSelectLanguage(event.target.value)\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.formControl}>\r\n      <Select\r\n        id=\"demo-simple-select\"\r\n        IconComponent={whiteTranslateIcon}\r\n        value={age}\r\n        onChange={handleChange}\r\n        style={{color:\"inherit\", fontSize: '18px' }}\r\n      >\r\n        <MenuItem value={'en'}>English</MenuItem>\r\n        <MenuItem value={'zh'}>简体中文</MenuItem>\r\n        <MenuItem value={'jp'}>日本語</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n}));\r\n    \r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [darkMode, setDarkMode] = React.useState(false);\r\n\r\n  const handleDarkMode = (event) => {\r\n    setDarkMode(!darkMode)\r\n    props.setDarkMode(!darkMode)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        style={{\r\n          opacity: 0.7,\r\n          backgroundBlendMode: \"normal,luminosity\",\r\n          backdropFilter: 'blur(5px)',\r\n          boxShadow: '3px 6px 20px rgba(104,102,255,.44), -3px -6px 10px hsla(0,0%,100%,.6)'\r\n        }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Audio Overlay\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton \r\n              aria-label=\"dark mode on off\"\r\n              color=\"inherit\"\r\n              onClick={handleDarkMode}\r\n            >\r\n              { darkMode ? <Brightness3Icon /> : <Brightness6Icon /> }\r\n            </IconButton>\r\n            <LanguageSelector onSelectLanguage={props.onSelectLanguage} />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      <div className={classes.toolbar} />\r\n      \r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            { text: 'HOME', link: '/', iconFunc: () => { return <HomeIcon /> } },\r\n            { text: 'ABOUT', link: '/about', iconFunc: () => { return <InfoIcon /> } },\r\n            { text: 'RECIPES', link: '/recipes', iconFunc: () => { return <InfoIcon /> } },\r\n            { text: 'DASHBOARD', link: '/dashboard', iconFunc: () => { return <InfoIcon /> } },\r\n          ].map((obj, idx) => {\r\n            return <ListItemLink key={obj.text + idx} to={obj.link} primary={obj.text} icon={obj.iconFunc()} />\r\n          })}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function AboutPage(props) {\r\n  return (\r\n    <h2>HOME</h2>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function AboutPage(props) {\r\n  return (\r\n    <h2>ABOUT</h2>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function AboutPage(props) {\r\n  return (\r\n    <h2>RECIPES</h2>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function AboutPage(props) {\r\n  return (\r\n    <h2>DASHBOARD</h2>\r\n  )\r\n}","import React from \"react\";\r\nimport {\r\n  HashRouter,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport NavigationMenu from \"./components/NavigationMenu\"\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport RecipesPage from './pages/RecipesPage';\r\nimport DashboardPage from './pages/DashboardPage';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      lang: 'en',\r\n      darkMode: false\r\n    }\r\n    this.onSelectLanguage = this.onSelectLanguage.bind(this)\r\n    this.setDarkMode = this.setDarkMode.bind(this)\r\n  }\r\n  onSelectLanguage(e) {\r\n    console.log(e)\r\n    this.setState({\r\n      lang: e\r\n    })\r\n  }\r\n  \r\n  setDarkMode(e) {\r\n    console.log(e)\r\n    this.setState({\r\n      darkMode: e\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const lang = this.state.lang\r\n    console.log(process.env.PUBLIC_URL)\r\n    return (\r\n      <HashRouter initialEntries={['/drafts']} initialIndex={0}>\r\n        <div>\r\n          <NavigationMenu\r\n            onSelectLanguage={this.onSelectLanguage}\r\n            setDarkMode={this.setDarkMode}\r\n          />\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <AboutPage />\r\n          </Route>\r\n          <Route path=\"/recipes\">\r\n            <RecipesPage />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <DashboardPage />\r\n          </Route>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n// <React.StrictMode>\r\n    <App />,\r\n//  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}